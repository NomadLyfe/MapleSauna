name: CI/CD

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  schedule: # nightly sanity check
    - cron: "0 0 * * *"
  workflow_dispatch: # manual trigger

permissions:
  contents: read # only need read of repo files
  packages: write

concurrency:
  group: ci-${{ github.ref_name }} # one run per branch
  cancel-in-progress: true

defaults:
  run:
    shell: bash

jobs:
  build-and-smoke:
    name: Build & Smoke-Test (via Docker Compose)
    runs-on: ubuntu-latest
    env:
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Bring up stack (builds images)
        run: |
          docker compose up -d

      - name: Verify dist/
        run: |
          echo "=== dist directory ==="
          docker compose exec maplesauna ls -R /app/dist

      - name: Smoke-test container startup
        run: |
          if docker compose ps maplesauna | grep -q "Up"; then
            echo "✅ Server is up in its container"
          else
            echo "❌ Server failed to start"
            docker compose logs maplesauna
            exit 1
          fi

  docker-publish:
    name: Publish Docker Image
    needs: build-and-smoke
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Log in to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & Push
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/${{ github.repository }}:latest
          cache-from: type=registry,ref=ghcr.io/${{ github.repository_owner }}/${{ github.repository }}:cache
          cache-to: type=registry,ref=ghcr.io/${{ github.repository_owner }}/${{ github.repository }}:cache,mode=max
